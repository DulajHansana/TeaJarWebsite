name: Build and Deploy Client

on:
  push:
    branches:
      - main  # Trigger only on the main branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18  # Ensure this matches your project requirements

    - name: Install dependencies
      run: npm install
      working-directory: ./client  # Navigate to client folder for npm install

    - name: Build the Next.js project
      run: npm run build
      working-directory: ./client  # Run build in client folder

    - name: Remove cache and standalone folders
      run: |
        rm -rf ./client/.next/cache
        rm -rf ./client/.next/standalone
      working-directory: ./client  # Ensure we're working in the correct directory

    - name: Zip the .next folder
      run: zip -r ./client/.next.zip ./client/.next/  # Zip the .next directory into a .zip file

    - name: Upload the zip file to FTP
      uses: SamKirkland/FTP-Deploy-Action@v4.3.5
      with:
        server: ${{ secrets.FTP_SERVER }}
        username: ${{ secrets.TEAJAR_USERNAME }}
        password: ${{ secrets.TEAJAR_PASSWORD }}
        local-dir: ./client/.next.zip  # Upload the zip file (no trailing slash for a file)
        server-dir: ./  # Adjust to your server's web directory

    - name: Unzip on server (using SSH)
      if: success()  # Only run this if previous steps succeed
      run: |
        sshpass -p ${{ secrets.FTP_PASSWORD }} ssh ${{ secrets.FTP_USERNAME }}@${{ secrets.FTP_SERVER }} 'unzip ./next.zip -d ./ && rm ./next.zip'  # SSH command to unzip the file
      env:
        FTP_PASSWORD: ${{ secrets.FTP_PASSWORD }}
        FTP_USERNAME: ${{ secrets.FTP_USERNAME }}
        FTP_SERVER: ${{ secrets.FTP_SERVER }}
